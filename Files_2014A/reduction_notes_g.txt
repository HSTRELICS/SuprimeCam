## 2014-03-03

Step 1: Collect files
---------------------
Make symbolic links from the Reduc/[source]_g and Reduc/[source]_g_shortexp
directories to the appropriate files in the Raw/[source] directories.  

A summary of the g-band files for the four sources are below.

HE0435
------
 t_exp      Start        End
 -----  ------------ ------------
   3    SUPA01448620 SUPA01448629
  30    SUPA01448630 SUPA01448639
 120    SUPA01448640 SUPA01448689

HE1104
------
 t_exp      Start        End
 -----  ------------ ------------
   3    SUPA01448880 SUPA01448889
  30    SUPA01448890 SUPA01448899
 120    SUPA01448900 SUPA01448949

RXJ1131
-------
 t_exp      Start        End
 -----  ------------ ------------
   3    SUPA01448950 SUPA01448959
  30    SUPA01448960 SUPA01448969
 120    SUPA01448970 SUPA01449019

B1608
-----
 t_exp      Start        End
 -----  ------------ ------------
   3    SUPA01449910 SUPA01449919
  30    SUPA01449920 SUPA01449929
 120    SUPA01449860 SUPA01449909

--------------------------------------------------

Step 2: Change naming scheme to prepare for SDFRED2 reducton

ls SUPA*fits > namechange.in
namechange.csh namechange.in

--------------------------------------------------

Step 3: Overscan and bias subtraction

ls H*fits > overscan.in
overscansub.csh overscan.in

--------------------------------------------------

Step 4: Make a flat field

Try doing this with the data themselves.  Create a Skyflat_g directory
and in in make links to all of the overscan-subtracted files for the
four targets.  Then run the flat-field generating script.

cd Skyflat_g
ln -s ../HE0435_g/To_RH*fits .
ln -s ../HE1104_g/To_RH*fits .
ln -s ../RXJ1131_g/To_RH*fits .
ln -s ../B1608_g/To_RH*fits .
ls To_RH*fits > skyflat_g.in
mask_mkflat_HA.csh skyflat_g.in skyflat_g 0.4 1.3

--------------------------------------------------

Step 5: Apply flat-field correction

Go to the source directory

ls ../../Skyflat_g/skyflat_g*fits > skyflat_g.list
ls To*fits > ffield.in
ffield.csh skyflat_g.list ffield.in

--------------------------------------------------

Step 6: Distortion correction

ls fTo*fits > distcorr.in
distcorr.csh distcorr.in

--------------------------------------------------

Step 7: Mask the AG Shade

ls gfTo*fits > mask_AGX.in
mask_AGX.csh mask_AGX.in

---------------------------------------------------------------------------

*** END OF SDFRED REDUCTION ***

---------------------------------------------------------------------------

--------------------------------------------------

Step 8: Make the initial weight files before running SExtractor

cd ../Coadd
ln -s $gitdir/SuprimeCam/Astromatic/sext_astfile.param .
ln -s $gitdir/SuprimeCam/Astromatic/sext_scam_astrom.config .
ln -s $gitdir/SuprimeCam/Astromatic/scamp_scam.config .
ln -s $gitdir/SuprimeCam/Scripts/run_final_swarp.sh
python ../../rename_before_swarp.py

python ../../make_wht_for_swarp_1.py

--------------------------------------------------

Step 9: Run SExtractor on the files

ls object*.fits | grep -v wht | xargs -I {} -P 6 python ../../run_sext_scam_1.py {}

--------------------------------------------------

Step 10: Run scamp on the files, using the r-band catalog as the reference frame

#Example for 0435
ln -s $gitdir/SuprimeCam/Files_2014A/scamp_0435_use_rband.config .
scamp object*cat -c scamp_0435_use_rband.config

ls object*fits | grep -v wht > good_frames_pass1.txt
[Edit out any objects that had red lines in the scamp output]

--------------------------------------------------

Step 11: Run the initial swarp to create a median-stacked coadd file
Even at this stage, set the center, pixel scale, and output image size,
which will be lens-dependent.

#Example for 0435
ln -s $gitdir/SuprimeCam/Files_2014A/swarp_0435_1.config .
ln -s $gitdir/SuprimeCam/Files_2014A/swarp_0435_2.config .
swarp @good_frames_pass1.txt -c swarp_0435_1.config

# Generic version:
#  swarp @good_frames_pass1.txt -c swarp_scam_1.config

--------------------------------------------------

Step 12: Make the updated weight maps

*** NB: The FLXSCAL paramter produced by scamp does the following:
 1. Converts the units of the output swarped file into counts/sec
 2. Adjusts the flux levels by an additional small amount to optimize the
    flux match between the images.

# Note: The sigma clipping level has to be chosen.  For now, go with nsig=3.
#  (the last argument on the line below) 

python ../../make_wht_for_swarp_2.py swarp_median.fits 3.

--------------------------------------------------

Step 13: Put the exposure time back into the individual resampled files

python ../../add_exptime.py 120

--------------------------------------------------

Step 14: Do the penultimate coadd, with a lens-based config file that is 
slightly different from the one in step 10.  The differences are two-fold:
  1. COMBINE_TYPE is now WEIGHTED and RESAMPLE is now N
     (These changes are reflected in swarp_scam_2.config)
  2. The center, pixel size, and number of pixels is now set for each lens
     system

# Example for HE0435 data
./run_final_swarp.sh 0435 g

--------------------------------------------------

Step 15: Create the exposure time map

# Example for HE0435

ln -s $gitdir/SuprimeCam/Files_2014A/swarp_0435_texp.config .
python ../../make_texp_map.py 0435 g 120

--------------------------------------------------

Step 16: Fix header in final combined image

# Example for HE0435
ipython
lensroot = '0435'
import suprimecam_redux as scam
zeropt = 27.358
scifile = '%s_scam_mar14_g.fits' % lensroot
texpfile = scifile.replace('.fits','_texp.fits')
scam.fix_final_headers(scifile,texpfile,zeropt)

--------------------------------------------------

Step 17: Run SExtractor on the final coadd, using a filter-specific config file

# Example for HE0435
mv 0435_scam_mar14_*fits ../../../Final
cd ../../../Final
python $gitdir/SuprimeCam/python/run_sext_final.py 0435_scam_mar14_g.fits
